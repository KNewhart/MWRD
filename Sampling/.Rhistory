PAA.PROFILE.DATA <- read.csv("~/GitHub/MWRD/Sampling/Copy of PAA PROFILE DATA_6-27-19_2.csv")
View(PAA.PROFILE.DATA)
(PAA.PROFILE.DATA$COLLECTION_DATE)
(PAA.PROFILE.DATA$COLLECTION_TIME)
str(PAA.PROFILE.DATA$COLLECTION_DATE)
str(droplevels(PAA.PROFILE.DATA$COLLECTION_DATE))
View(droplevels(PAA.PROFILE.DATA$COLLECTION_DATE))
strftime(paste(as.character(PAA.PROFILE.DATA$COLLECTION_DATE), as.character(PAA.PROFILE.DATA$COLLECTION_TIME)))
View(paste(as.character(PAA.PROFILE.DATA$COLLECTION_DATE), as.character(PAA.PROFILE.DATA$COLLECTION_TIME)))
?strftime
strptime(paste(as.character(PAA.PROFILE.DATA$COLLECTION_DATE), as.character(PAA.PROFILE.DATA$COLLECTION_TIME)), format="%Y-%m-%d %H:%M")
strptime(paste(as.character(PAA.PROFILE.DATA$COLLECTION_DATE), as.character(PAA.PROFILE.DATA$COLLECTION_TIME)), format="%m/%d/%Y %H:%M")
PAA.PROFILE.DATA <- cbind(PAA.PROFILE.DATA[,1:3],date.time,PAA.PROFILE.DATA[.6:ncol(PAA.PROFILE.DATA)])
date.time <- strptime(paste(as.character(PAA.PROFILE.DATA$COLLECTION_DATE), as.character(PAA.PROFILE.DATA$COLLECTION_TIME)), format="%m/%d/%Y %H:%M")
PAA.PROFILE.DATA <- cbind(PAA.PROFILE.DATA[,1:3],date.time,PAA.PROFILE.DATA[.6:ncol(PAA.PROFILE.DATA)])
PAA.PROFILE.DATA <- read.csv("~/GitHub/MWRD/Sampling/Copy of PAA PROFILE DATA_6-27-19_2.csv")
date.time <- strptime(paste(as.character(PAA.PROFILE.DATA$COLLECTION_DATE), as.character(PAA.PROFILE.DATA$COLLECTION_TIME)), format="%m/%d/%Y %H:%M")
PAA.PROFILE.DATA <- cbind(PAA.PROFILE.DATA[,1:3],date.time,PAA.PROFILE.DATA[,6:ncol(PAA.PROFILE.DATA)])
with(PAA.PROFILE.DATA[PAA.PROFILE.DATA$ANALYSIS_CODE == "PAAR"], plot (date.time, NUMERIC_RESULT))
with(PAA.PROFILE.DATA[PAA.PROFILE.DATA$ANALYSIS_CODE == "PAAR",], plot (date.time, NUMERIC_RESULT))
install.packages("calibrate")]
install.packages("calibrate")
plot(date.time, NUMERIC_RESULT, data = plotting.data)
# Add labels
plotting.data <- PAA.PROFILE.DATA[PAA.PROFILE.DATA$ANALYSIS_CODE == "PAAR",]
plot(date.time, NUMERIC_RESULT, data = plotting.data)
colnames(plotting.data)
plot(x = date.time, y = NUMERIC_RESULT, data = plotting.data)
View(PAA.PROFILE.DATA)
View(plotting.data)
names(plotting.data)
str(plotting.data)
plot(NUMERIC_RESULT ~ date.time, data = plotting.data)
calibrate::textxy(x=plotting.data$date.time,
y=plotting.data$NUMERIC_RESULT,
plotting.data$date.time)
plot(NUMERIC_RESULT ~ date.time, data = plotting.data)
calibrate::textxy(x=plotting.data$date.time,
y=plotting.data$NUMERIC_RESULT,
plotting.data$date.time)
n <- which(colnames(plotting.data) == "NUMERIC_RESULT")
calibrate::textxy(x=plotting.data$date.time,
y=plotting.data[,n],
plotting.data$date.time)
plot(x = date.time, y = n, data = plotting.data)
n <- which(colnames(plotting.data) == "NUMERIC_RESULT")
plot(x = date.time, y = n, data = plotting.data)
plot(x = plotting.data$date.time, y = plotting.data[,n])
n <- which(colnames(plotting.data) == "NUMERIC_RESULT")
calibrate::textxy(x=plotting.data$date.time,
y=plotting.data[,n],
plotting.data$date.time)
?calibrate::textxy
plot(x = plotting.data$date.time, y = plotting.data[,n])
n <- which(colnames(plotting.data) == "NUMERIC_RESULT")
calibrate::textxy(X=plotting.data$date.time,
Y=plotting.data[,n],
labs=plotting.data$date.time)
text(xx,yy,labels=yy)
xx <- plotting.data$date.time
yy <- plotting.data$NUMERIC_RESULT
plot(xx, yy)
text(xx,yy,labels=yy)
text(xx,yy,labels=xx)
plot(xx, yy)
text(xx,yy,labels=xx, cex=.5)
difftime(plotting.data$date.time[i], plotting.data$date.time[i-1], units = "minutes")
i = 2
difftime(plotting.data$date.time[i], plotting.data$date.time[i-1], units = "minutes")
difftime(plotting.data$date.time[i], plotting.data$date.time[i-1], units = "mins")
i = 3
i = 7
difftime(plotting.data$date.time[i], plotting.data$date.time[i-1], units = "mins")
difftime(plotting.data$date.time[i], plotting.data$date.time[i-1], units = "mins") > 60
# Color by sampling campagin
PAA.PROFILE.DATA <- cbind(PAA.PROFILE.DATA, rep(1, nrow(PAA.PROFILE.DATA)))
for(i in 2:nrow(PAA.PROFILE.DATA)){
if(i == 2) {
last.row <- 2
sampling.campaign <- 1
}
if(difftime(PAA.PROFILE.DATA$date.time[i],PAA.PROFILE.DATA$date.time[i-1], units = "mins") > 60) {
PAA.PROFILE.DATA[last.row:(i-1),ncol(PAA.PROFILE.DATA)] <- sampling.campaign
last.row <- i
sampling.campaign <- sampling.campaign + 1
}
}
sort(PAA.PROFILE.DATA$date.time)
which(sort(PAA.PROFILE.DATA$date.time))
?sort
str(PAA.PROFILE.DATA$date.time)
sort(PAA.PROFILE.DATA$date.time)
PAA.PROFILE.DATA <- PAA.PROFILE.DATA[sort(PAA.PROFILE.DATA$date.time),]
PAA.PROFILE.DATA <- as.xts(PAA.PROFILE.DATA, order.by = PAA.PROFILE.DATA$date.time)
library(xts)
PAA.PROFILE.DATA <- xts(PAA.PROFILE.DATA, order.by = PAA.PROFILE.DATA$date.time)
n <- na.omit(PAA.PROFILE.DATA$date.time)
PAA.PROFILE.DATA <- xts(PAA.PROFILE.DATA[-n,], order.by = PAA.PROFILE.DATA$date.time[-n])
anyNA(PAA.PROFILE.DATA$date.time)
n <- which(is.na(PAA.PROFILE.DATA$date.time))
PAA.PROFILE.DATA <- xts(PAA.PROFILE.DATA[-n,], order.by = PAA.PROFILE.DATA$date.time[-n])
for(i in 2:nrow(PAA.PROFILE.DATA)){
if(i == 2) {
last.row <- 2
sampling.campaign <- 1
}
if(difftime(PAA.PROFILE.DATA$date.time[i],PAA.PROFILE.DATA$date.time[i-1], units = "mins") > 60) {
PAA.PROFILE.DATA[last.row:(i-1),ncol(PAA.PROFILE.DATA)] <- sampling.campaign
last.row <- i
sampling.campaign <- sampling.campaign + 1
}
}
PAA.PROFILE.DATA <- read.csv("~/GitHub/MWRD/Sampling/Copy of PAA PROFILE DATA_6-27-19_2.csv")
date.time <- strptime(paste(as.character(PAA.PROFILE.DATA$COLLECTION_DATE), as.character(PAA.PROFILE.DATA$COLLECTION_TIME)), format="%m/%d/%Y %H:%M")
PAA.PROFILE.DATA <- cbind(PAA.PROFILE.DATA[,1:3],date.time,PAA.PROFILE.DATA[,6:ncol(PAA.PROFILE.DATA)])
# Color by sampling campagin
PAA.PROFILE.DATA <- cbind(PAA.PROFILE.DATA, rep(1, nrow(PAA.PROFILE.DATA)))
library(xts)
n <- which(is.na(PAA.PROFILE.DATA$date.time))
PAA.PROFILE.DATA <- xts(PAA.PROFILE.DATA[-n,], order.by = PAA.PROFILE.DATA$date.time[-n])
for(i in 2:nrow(PAA.PROFILE.DATA)){
if(i == 2) {
last.row <- 2
sampling.campaign <- 1
}
if(difftime(PAA.PROFILE.DATA$date.time[i],PAA.PROFILE.DATA$date.time[i-1], units = "mins") > 60) {
PAA.PROFILE.DATA[last.row:(i-1),ncol(PAA.PROFILE.DATA)] <- sampling.campaign
last.row <- i
sampling.campaign <- sampling.campaign + 1
}
}
PAA.PROFILE.DATA <- read.csv("~/GitHub/MWRD/Sampling/Copy of PAA PROFILE DATA_6-27-19_2.csv")
date.time <- strptime(paste(as.character(PAA.PROFILE.DATA$COLLECTION_DATE), as.character(PAA.PROFILE.DATA$COLLECTION_TIME)), format="%m/%d/%Y %H:%M")
PAA.PROFILE.DATA <- cbind(PAA.PROFILE.DATA[,1:3],date.time,PAA.PROFILE.DATA[,6:ncol(PAA.PROFILE.DATA)])
# Color by sampling campagin
PAA.PROFILE.DATA <- cbind(PAA.PROFILE.DATA, rep(1, nrow(PAA.PROFILE.DATA)))
library(xts)
n <- which(is.na(PAA.PROFILE.DATA$date.time))
PAA.PROFILE.DATA <- xts(PAA.PROFILE.DATA[-n,], order.by = PAA.PROFILE.DATA$date.time[-n])
for(i in 2:nrow(PAA.PROFILE.DATA)){
if(i == 2) {
last.row <- 2
sampling.campaign <- 1
}
if(difftime(index(PAA.PROFILE.DATA)[i],index(PAA.PROFILE.DATA)[i-1], units = "mins") > 60) {
PAA.PROFILE.DATA[last.row:(i-1),ncol(PAA.PROFILE.DATA)] <- sampling.campaign
last.row <- i
sampling.campaign <- sampling.campaign + 1
}
}
PAA.PROFILE.DATA <- read.csv("~/GitHub/MWRD/Sampling/Copy of PAA PROFILE DATA_6-27-19_2.csv")
date.time <- strptime(paste(as.character(PAA.PROFILE.DATA$COLLECTION_DATE), as.character(PAA.PROFILE.DATA$COLLECTION_TIME)), format="%m/%d/%Y %H:%M")
PAA.PROFILE.DATA <- cbind(PAA.PROFILE.DATA[,1:3],date.time,PAA.PROFILE.DATA[,6:ncol(PAA.PROFILE.DATA)])
# Color by sampling campagin
PAA.PROFILE.DATA <- cbind(PAA.PROFILE.DATA, rep(1, nrow(PAA.PROFILE.DATA)))
library(xts)
n <- which(is.na(PAA.PROFILE.DATA$date.time))
PAA.PROFILE.DATA <- xts(PAA.PROFILE.DATA[-n,], order.by = PAA.PROFILE.DATA$date.time[-n], origin = lubridate::origin)
for(i in 2:nrow(PAA.PROFILE.DATA)){
if(i == 2) {
last.row <- 2
sampling.campaign <- 1
}
if(difftime(index(PAA.PROFILE.DATA)[i],index(PAA.PROFILE.DATA)[i-1], units = "mins") > 60) {
PAA.PROFILE.DATA[last.row:(i-1),ncol(PAA.PROFILE.DATA)] <- sampling.campaign
last.row <- i
sampling.campaign <- sampling.campaign + 1
}
}
PAA.PROFILE.DATA <- read.csv("~/GitHub/MWRD/Sampling/Copy of PAA PROFILE DATA_6-27-19_2.csv")
date.time <- strptime(paste(as.character(PAA.PROFILE.DATA$COLLECTION_DATE), as.character(PAA.PROFILE.DATA$COLLECTION_TIME)), format="%m/%d/%Y %H:%M")
PAA.PROFILE.DATA <- cbind(PAA.PROFILE.DATA[,1:3],date.time,PAA.PROFILE.DATA[,6:ncol(PAA.PROFILE.DATA)])
# Color by sampling campagin
PAA.PROFILE.DATA <- cbind(PAA.PROFILE.DATA, rep(1, nrow(PAA.PROFILE.DATA)))
library(xts)
n <- which(is.na(PAA.PROFILE.DATA$date.time))
PAA.PROFILE.DATA <- xts(PAA.PROFILE.DATA[-n,], order.by = PAA.PROFILE.DATA$date.time[-n], origin = lubridate::origin)
for(i in 2:nrow(PAA.PROFILE.DATA)){
if(i == 2) {
last.row <- 2
sampling.campaign <- 1
}
if(difftime(index(PAA.PROFILE.DATA)[i],index(PAA.PROFILE.DATA)[i-1], units = "mins") > 60) {
PAA.PROFILE.DATA[last.row:(i-1),ncol(PAA.PROFILE.DATA)] <- sampling.campaign
last.row <- i
sampling.campaign <- sampling.campaign + 1
}
}
difftime(index(PAA.PROFILE.DATA)[i],index(PAA.PROFILE.DATA)[i-1], units = "mins")
index(PAA.PROFILE.DATA)[i]
index(PAA.PROFILE.DATA)[i-1]
iew(PAA.PROFILE.DATA)
View(PAA.PROFILE.DATA)
PAA.PROFILE.DATA <- read.csv("~/GitHub/MWRD/Sampling/Copy of PAA PROFILE DATA_6-27-19_2.csv")
date.time <- strptime(paste(as.character(PAA.PROFILE.DATA$COLLECTION_DATE), as.character(PAA.PROFILE.DATA$COLLECTION_TIME)), format="%m/%d/%Y %H:%M")
PAA.PROFILE.DATA <- cbind(PAA.PROFILE.DATA[,1:3],date.time,PAA.PROFILE.DATA[,6:ncol(PAA.PROFILE.DATA)])
# Color by sampling campagin
PAA.PROFILE.DATA <- cbind(PAA.PROFILE.DATA, rep(1, nrow(PAA.PROFILE.DATA)))
library(xts)
n <- which(is.na(PAA.PROFILE.DATA$date.time))
PAA.PROFILE.DATA <- xts(PAA.PROFILE.DATA, order.by = PAA.PROFILE.DATA$date.time, origin = lubridate::origin)
View(PAA.PROFILE.DATA)
index(PAA.PROFILE.DATA)[i]
difftime(index(PAA.PROFILE.DATA)[i],index(PAA.PROFILE.DATA)[i-1], units = "mins")
for(i in 2:nrow(PAA.PROFILE.DATA)){
if(i == 2) {
last.row <- 2
sampling.campaign <- 1
}
if(difftime(index(PAA.PROFILE.DATA)[i],index(PAA.PROFILE.DATA)[i-1], units = "mins") > 60) {
PAA.PROFILE.DATA[last.row:(i-1),ncol(PAA.PROFILE.DATA)] <- sampling.campaign
last.row <- i
sampling.campaign <- sampling.campaign + 1
}
}
unique(sampling.campaign)
install.packages("RColorBrewer")
library(RColorBrewer)
display.brewer.all()
PAA.PROFILE.DATA <- read.csv("~/GitHub/MWRD/Sampling/Copy of PAA PROFILE DATA_6-27-19_2.csv")
date.time <- strptime(paste(as.character(PAA.PROFILE.DATA$COLLECTION_DATE), as.character(PAA.PROFILE.DATA$COLLECTION_TIME)), format="%m/%d/%Y %H:%M")
PAA.PROFILE.DATA <- cbind(PAA.PROFILE.DATA[,1:3],date.time,PAA.PROFILE.DATA[,6:ncol(PAA.PROFILE.DATA)])
# Color by sampling campagin
PAA.PROFILE.DATA <- cbind(PAA.PROFILE.DATA, rep(0, nrow(PAA.PROFILE.DATA)))
library(xts)
n <- which(is.na(PAA.PROFILE.DATA$date.time))
PAA.PROFILE.DATA <- xts(PAA.PROFILE.DATA, order.by = PAA.PROFILE.DATA$date.time, origin = lubridate::origin)
for(i in 2:nrow(PAA.PROFILE.DATA)){
if(i == 2) {
last.row <- 2
sampling.campaign <- 1
}
if(difftime(index(PAA.PROFILE.DATA)[i],index(PAA.PROFILE.DATA)[i-1], units = "mins") > 60) {
PAA.PROFILE.DATA[last.row:(i-1),ncol(PAA.PROFILE.DATA)] <- sampling.campaign
last.row <- i
sampling.campaign <- sampling.campaign + 1
}
}
# Plot data
# with(PAA.PROFILE.DATA[PAA.PROFILE.DATA$ANALYSIS_CODE == "PAAR",], plot (date.time, NUMERIC_RESULT))
plotting.data <- PAA.PROFILE.DATA[PAA.PROFILE.DATA$ANALYSIS_CODE == "PAAR",]
xx <- plotting.data$date.time
yy <- plotting.data$NUMERIC_RESULT
library(RColorBrewer)
plot(xx, yy, col=brewer.pal(unique(sampling.campaign),"Set3"))
# Add labels
text(xx,yy,labels=xx, cex=.5)
plotting.data <- as.zoo(PAA.PROFILE.DATA[PAA.PROFILE.DATA$ANALYSIS_CODE == "PAAR",])
xx <- index(plotting.data)
yy <- plotting.data$NUMERIC_RESULT
library(RColorBrewer)
plot(yy, col=brewer.pal(unique(sampling.campaign),"Set3"))
# Add labels
text(xx,yy,labels=xx, cex=.5)
plot(yy, col=brewer.pal(unique(sampling.campaign),"Set3"))
str(yy)
plot(as.numeric(yy), col=brewer.pal(unique(sampling.campaign),"Set3"))
plot(xx, as.numeric(yy), col=brewer.pal(unique(sampling.campaign),"Set3"))
brewer.pal(unique(sampling.campaign),"Set3")
plot(xx, as.numeric(yy), col=brewer.pal(unique(sampling.campaign),"Set3")[plotting.data[,ncol(plotting.data)]])
brewer.pal(unique(sampling.campaign),"Set3")[plotting.data[,ncol(plotting.data)]]
plotting.data[,col(plotting.data)]
plot(xx, as.numeric(yy), col=brewer.pal(unique(sampling.campaign),"Set3")[as.numeric(plotting.data[,ncol(plotting.data))]])
as.numeric(plotting.data[,ncol(plotting.data)])
plot(xx, as.numeric(yy), col=brewer.pal(unique(sampling.campaign),"Set3")[as.numeric(plotting.data[,ncol(plotting.data)])])
plot(xx, as.numeric(yy), col=brewer.pal(unique(sampling.campaign),"Set1")[as.numeric(plotting.data[,ncol(plotting.data)])])
plot(xx, as.numeric(yy), pch=20,
col=brewer.pal(unique(sampling.campaign),"Set1")[as.numeric(plotting.data[,ncol(plotting.data)])])
plot(xx, as.numeric(yy), pch=20,
col=brewer.pal(unique(sampling.campaign),"Set1")[as.numeric(plotting.data[,ncol(plotting.data)])])
plotting.data <- as.zoo(PAA.PROFILE.DATA[PAA.PROFILE.DATA$ANALYSIS_CODE == "PAAR",])
n <- 1:nrow(plotting.data)
n <- "2019-06-24"
xx <- index(plotting.data)[n]
yy <- plotting.data$NUMERIC_RESULT[n]
library(RColorBrewer)
plot(xx, as.numeric(yy), pch=20,
col=brewer.pal(unique(sampling.campaign),"Set1")[as.numeric(plotting.data[,ncol(plotting.data)])])
# Add labels
which(index(plotting.data) %in% "2019-6-24")
which(index(plotting.data) %in% "2019-06-24")
xx <- index(plotting.data[n])
yy <- plotting.data$NUMERIC_RESULT[n]
plotting.data <- as.zoo(PAA.PROFILE.DATA[PAA.PROFILE.DATA$ANALYSIS_CODE == "PAAR",])
xx <- index(plotting.data)
yy <- plotting.data$NUMERIC_RESULT
library(RColorBrewer)
plot(xx, as.numeric(yy), pch=20,
col=brewer.pal(unique(sampling.campaign),"Set1")[as.numeric(plotting.data[,ncol(plotting.data)])])
# Add labels
# Add labels
text(xx,yy,labels=xx, cex=.5)
# Add labels
text(xx,as.numeric(yy),labels=xx, cex=.5)
?text
plot(xx, as.numeric(yy), pch=20,
col=brewer.pal(unique(sampling.campaign),"Set1")[as.numeric(plotting.data[,ncol(plotting.data)])])
# Add labels
text(xx,as.numeric(yy),labels=xx, cex=.5, pos=4)
# Add labels
text(xx,as.numeric(yy),labels=xx, cex=.5, pos=3)
plotting.data <- as.zoo(PAA.PROFILE.DATA[PAA.PROFILE.DATA$ANALYSIS_CODE == "PAAR",])
xx <- index(plotting.data)
yy <- plotting.data$NUMERIC_RESULT
library(RColorBrewer)
plot(xx, as.numeric(yy), pch=20,
col=brewer.pal(unique(sampling.campaign),"Set1")[as.numeric(plotting.data[,ncol(plotting.data)])])
# Add labels
text(xx,as.numeric(yy),labels=xx, cex=.5, pos=3)
plot(xx, as.numeric(yy), pch=20,
col=brewer.pal(unique(sampling.campaign),"Set1")[as.numeric(plotting.data[,ncol(plotting.data)])])
# Add labels
text(xx,as.numeric(yy),labels=xx, cex=.5, pos=2)
View(yy)
View(index(xx))
View(xx)
PAA.PROFILE.DATA <- read.csv("~/GitHub/MWRD/Sampling/Copy of PAA PROFILE DATA_6-27-19_2.csv")
date.time <- strptime(paste(as.character(PAA.PROFILE.DATA$COLLECTION_DATE), as.character(PAA.PROFILE.DATA$COLLECTION_TIME)), format="%m/%d/%Y %H:%M")
PAA.PROFILE.DATA <- cbind(PAA.PROFILE.DATA[,1:3],date.time,PAA.PROFILE.DATA[,6:ncol(PAA.PROFILE.DATA)])
# Color by sampling campagin
PAA.PROFILE.DATA <- cbind(PAA.PROFILE.DATA, rep(0, nrow(PAA.PROFILE.DATA)))
library(xts)
n <- which(is.na(PAA.PROFILE.DATA$date.time))
PAA.PROFILE.DATA <- xts(PAA.PROFILE.DATA, order.by = PAA.PROFILE.DATA$date.time, origin = lubridate::origin)
nrow(PAA.PROFILE.DATA)
i = 70
difftime(index(PAA.PROFILE.DATA)[i],index(PAA.PROFILE.DATA)[i-1], units = "mins") > 60
i = i + 1
difftime(index(PAA.PROFILE.DATA)[i],index(PAA.PROFILE.DATA)[i-1], units = "mins") > 60
while(difftime(index(PAA.PROFILE.DATA)[i],index(PAA.PROFILE.DATA)[i-1], units = "mins") < 60){i <- i + 1}
difftime(index(PAA.PROFILE.DATA)[i],index(PAA.PROFILE.DATA)[i-1], units = "mins") > 60
index(PA.PROFILE.DATA[77])
index(PA.PROFILE.DATA[77,])
PAA.PROFILE.DATA[77,]
PAA.PROFILE.DATA[76,]
difftime(index(PAA.PROFILE.DATA)[i],index(PAA.PROFILE.DATA)[i-1], units = "mins") > 60
while(difftime(index(PAA.PROFILE.DATA)[i],index(PAA.PROFILE.DATA)[i-1], units = "mins") < 60){i <- i + 1}
i <- i + 1
while(difftime(index(PAA.PROFILE.DATA)[i],index(PAA.PROFILE.DATA)[i-1], units = "mins") < 60){i <- i + 1}
index(PA.PROFILE.DATA[i,])
index(PAA.PROFILE.DATA[i,])
i <- i + 1
while(difftime(index(PAA.PROFILE.DATA)[i],index(PAA.PROFILE.DATA)[i-1], units = "mins") < 60){i <- i + 1}
index(PAA.PROFILE.DATA[i,])
i <- i + 1
while(difftime(index(PAA.PROFILE.DATA)[i],index(PAA.PROFILE.DATA)[i-1], units = "mins") < 60){i <- i + 1}
index(PAA.PROFILE.DATA[i,])
for(i in 100:125) {difftime(index(PAA.PROFILE.DATA)[i],index(PAA.PROFILE.DATA)[i-1], units = "mins")}
for(i in 100:125) {print(difftime(index(PAA.PROFILE.DATA)[i],index(PAA.PROFILE.DATA)[i-1], units = "mins"))}
for(i in 100:125) {print(as.character(index(PAA.PROFILE.DATA[i,])))}
for(i in 100:125) {print(i,difftime(index(PAA.PROFILE.DATA)[i],index(PAA.PROFILE.DATA)[i-1], units = "mins"))}
for(i in 100:125) {print(paste(i,difftime(index(PAA.PROFILE.DATA)[i],index(PAA.PROFILE.DATA)[i-1], units = "mins")))}
i <- 115
difftime(index(PAA.PROFILE.DATA)[i],index(PAA.PROFILE.DATA)[i-1], units = "mins")
index(PAA.PROFILE.DATA)[i]
index(PAA.PROFILE.DATA)[i-1]
index(PAA.PROFILE.DATA)[i+1]
View(PAA.PROFILE.DATA)
PAA.PROFILE.DATA <- read.csv("~/GitHub/MWRD/Sampling/Copy of PAA PROFILE DATA_6-27-19_2.csv")
date.time <- strptime(paste(as.character(PAA.PROFILE.DATA$COLLECTION_DATE), as.character(PAA.PROFILE.DATA$COLLECTION_TIME)), format="%m/%d/%Y %H:%M")
PAA.PROFILE.DATA <- cbind(PAA.PROFILE.DATA[,1:3],date.time,PAA.PROFILE.DATA[,6:ncol(PAA.PROFILE.DATA)])
# Color by sampling campagin
PAA.PROFILE.DATA <- cbind(PAA.PROFILE.DATA, rep(0, nrow(PAA.PROFILE.DATA)))
library(xts)
PAA.PROFILE.DATA <- xts(PAA.PROFILE.DATA, order.by = PAA.PROFILE.DATA$date.time, origin = lubridate::origin)
which(is.na(index(PAA.PROFILE.DATA)))
View(PAA.PROFILE.DATA)
library(xts)
PAA.PROFILE.DATA <- read.csv("~/GitHub/MWRD/Sampling/Copy of PAA PROFILE DATA_6-27-19_2.csv")
date.time <- strptime(paste(as.character(PAA.PROFILE.DATA$COLLECTION_DATE), as.character(PAA.PROFILE.DATA$COLLECTION_TIME)), format="%m/%d/%Y %H:%M")
PAA.PROFILE.DATA <- cbind(PAA.PROFILE.DATA[,1:3],date.time,PAA.PROFILE.DATA[,6:ncol(PAA.PROFILE.DATA)])
# Color by sampling campagin
PAA.PROFILE.DATA <- cbind(PAA.PROFILE.DATA, rep(0, nrow(PAA.PROFILE.DATA)))
View(PAA.PROFILE.DATA)
PAA.PROFILE.DATA <- xts(PAA.PROFILE.DATA, order.by = PAA.PROFILE.DATA$date.time, origin = lubridate::origin)
for(i in 2:nrow(PAA.PROFILE.DATA)){
if(i == 2) {
last.row <- 2
sampling.campaign <- 1
}
if(difftime(index(PAA.PROFILE.DATA)[i],index(PAA.PROFILE.DATA)[i-1], units = "mins") > 60) {
PAA.PROFILE.DATA[last.row:(i-1),ncol(PAA.PROFILE.DATA)] <- sampling.campaign
last.row <- i
sampling.campaign <- sampling.campaign + 1
}
}
View(PAA.PROFILE.DATA)
PAA.PROFILE.DATA <- read.csv("~/GitHub/MWRD/Sampling/Copy of PAA PROFILE DATA_6-27-19_2.csv")
date.time <- strptime(paste(as.character(PAA.PROFILE.DATA$COLLECTION_DATE), as.character(PAA.PROFILE.DATA$COLLECTION_TIME)), format="%m/%d/%Y %H:%M")
PAA.PROFILE.DATA <- cbind(PAA.PROFILE.DATA[,1:3],date.time,PAA.PROFILE.DATA[,6:ncol(PAA.PROFILE.DATA)])
# Color by sampling campagin
PAA.PROFILE.DATA <- cbind(PAA.PROFILE.DATA, rep(NA, nrow(PAA.PROFILE.DATA)))
PAA.PROFILE.DATA <- xts(PAA.PROFILE.DATA, order.by = PAA.PROFILE.DATA$date.time, origin = lubridate::origin)
for(i in 2:nrow(PAA.PROFILE.DATA)){
if(i == 2) {
last.row <- 2
sampling.campaign <- 1
}
if(difftime(index(PAA.PROFILE.DATA)[i],index(PAA.PROFILE.DATA)[i-1], units = "mins") > 60) {
PAA.PROFILE.DATA[last.row:(i-1),ncol(PAA.PROFILE.DATA)] <- sampling.campaign
last.row <- i
sampling.campaign <- sampling.campaign + 1
}
}
PAA.PROFILE.DATA <- read.csv("~/GitHub/MWRD/Sampling/Copy of PAA PROFILE DATA_6-27-19_2.csv")
date.time <- strptime(paste(as.character(PAA.PROFILE.DATA$COLLECTION_DATE), as.character(PAA.PROFILE.DATA$COLLECTION_TIME)), format="%m/%d/%Y %H:%M")
PAA.PROFILE.DATA <- cbind(PAA.PROFILE.DATA[,1:3],date.time,PAA.PROFILE.DATA[,6:ncol(PAA.PROFILE.DATA)])
# Color by sampling campagin
PAA.PROFILE.DATA <- cbind(PAA.PROFILE.DATA, rep(NA, nrow(PAA.PROFILE.DATA)))
PAA.PROFILE.DATA <- xts(PAA.PROFILE.DATA, order.by = PAA.PROFILE.DATA$date.time, origin = lubridate::origin)
for(i in 2:nrow(PAA.PROFILE.DATA)){
if(i == 2) {
last.row <- 1
sampling.campaign <- 1
}
if(difftime(index(PAA.PROFILE.DATA)[i],index(PAA.PROFILE.DATA)[i-1], units = "mins") > 60) {
PAA.PROFILE.DATA[last.row:(i-1),ncol(PAA.PROFILE.DATA)] <- sampling.campaign
last.row <- i
sampling.campaign <- sampling.campaign + 1
}
}
difftime(dates[i], dates[i-1])
dates <- strptime(paste(as.character(PAA.PROFILE.DATA$COLLECTION_DATE), as.character(PAA.PROFILE.DATA$COLLECTION_TIME)), format="%m/%d/%Y %H:%M")
difftime(dates[i], dates[i-1])
PAA.PROFILE.DATA <- read.csv("~/GitHub/MWRD/Sampling/Copy of PAA PROFILE DATA_6-27-19_2.csv")
date.time <- strptime(paste(as.character(PAA.PROFILE.DATA$COLLECTION_DATE), as.character(PAA.PROFILE.DATA$COLLECTION_TIME)), format="%m/%d/%Y %H:%M")
PAA.PROFILE.DATA <- cbind(PAA.PROFILE.DATA[,1:3],date.time,PAA.PROFILE.DATA[,6:ncol(PAA.PROFILE.DATA)])
# Color by sampling campagin
PAA.PROFILE.DATA <- cbind(PAA.PROFILE.DATA, rep(NA, nrow(PAA.PROFILE.DATA)))
PAA.PROFILE.DATA <- xts(PAA.PROFILE.DATA, order.by = PAA.PROFILE.DATA$date.time, origin = lubridate::origin)
dates <- strptime(paste(as.character(PAA.PROFILE.DATA$COLLECTION_DATE), as.character(PAA.PROFILE.DATA$COLLECTION_TIME)), format="%m/%d/%Y %H:%M")
for(i in 2:nrow(PAA.PROFILE.DATA)){
if(i == 2) {
last.row <- 1
sampling.campaign <- 1
}
# if(difftime(index(PAA.PROFILE.DATA)[i],index(PAA.PROFILE.DATA)[i-1], units = "mins") > 60) {
if(difftime(dates[i],dates[i-1], units = "mins") > 60) {
PAA.PROFILE.DATA[last.row:(i-1),ncol(PAA.PROFILE.DATA)] <- sampling.campaign
last.row <- i
sampling.campaign <- sampling.campaign + 1
}
}
difftime(dates[i],dates[i-1], units = "mins")
dates[i]
dates[i-1]
View(PAA.PROFILE.DATA)
View(cbind(dates, PAA.PROFILE.DATA))
as.character(PAA.PROFILE.DATA$COLLECTION_DATE)
PAA.PROFILE.DATA <- read.csv("~/GitHub/MWRD/Sampling/Copy of PAA PROFILE DATA_6-27-19_2.csv")
date.time <- strptime(paste(as.character(PAA.PROFILE.DATA$COLLECTION_DATE), as.character(PAA.PROFILE.DATA$COLLECTION_TIME)), format="%m/%d/%Y %H:%M")
PAA.PROFILE.DATA <- cbind(PAA.PROFILE.DATA[,1:3],date.time,PAA.PROFILE.DATA[,6:ncol(PAA.PROFILE.DATA)])
# Color by sampling campagin
PAA.PROFILE.DATA <- cbind(PAA.PROFILE.DATA, rep(NA, nrow(PAA.PROFILE.DATA)))
PAA.PROFILE.DATA <- xts(PAA.PROFILE.DATA, order.by = PAA.PROFILE.DATA$date.time, origin = lubridate::origin)
PAA.PROFILE.DATA$COLLECTION_DATE
dates <- PAA.PROFILE.DATA$date.time
for(i in 2:nrow(PAA.PROFILE.DATA)){
if(i == 2) {
last.row <- 1
sampling.campaign <- 1
}
# if(difftime(index(PAA.PROFILE.DATA)[i],index(PAA.PROFILE.DATA)[i-1], units = "mins") > 60) {
if(difftime(dates[i],dates[i-1], units = "mins") > 60) {
PAA.PROFILE.DATA[last.row:(i-1),ncol(PAA.PROFILE.DATA)] <- sampling.campaign
last.row <- i
sampling.campaign <- sampling.campaign + 1
}
}
P
library(xts)
PAA.PROFILE.DATA <- read.csv("~/GitHub/MWRD/Sampling/Copy of PAA PROFILE DATA_6-27-19_2.csv")
date.time <- strptime(paste(as.character(PAA.PROFILE.DATA$COLLECTION_DATE), as.character(PAA.PROFILE.DATA$COLLECTION_TIME)), format="%m/%d/%Y %H:%M")
PAA.PROFILE.DATA <- cbind(PAA.PROFILE.DATA[,1:3],date.time,PAA.PROFILE.DATA[,6:ncol(PAA.PROFILE.DATA)])
# Color by sampling campagin
PAA.PROFILE.DATA <- cbind(PAA.PROFILE.DATA, rep(NA, nrow(PAA.PROFILE.DATA)))
PAA.PROFILE.DATA <- xts(PAA.PROFILE.DATA, order.by = PAA.PROFILE.DATA$date.time, origin = lubridate::origin)
dates <- PAA.PROFILE.DATA$date.time
for(i in 2:nrow(PAA.PROFILE.DATA)){
if(i == 2) {
last.row <- 1
sampling.campaign <- 1
}
# if(difftime(index(PAA.PROFILE.DATA)[i],index(PAA.PROFILE.DATA)[i-1], units = "mins") > 60) {
if(difftime(dates[i],dates[i-1], units = "mins") > 60) {
PAA.PROFILE.DATA[last.row:(i-1),ncol(PAA.PROFILE.DATA)] <- sampling.campaign
last.row <- i
sampling.campaign <- sampling.campaign + 1
}
}
View(date.time[100:114])
View(unlist(date.time[100:114]))
date.time[100:114]
str(date.time[101])
str(date.time[102])
str(date.time[103])
dates <- as.POSIXct(PAA.PROFILE.DATA$date.time)
for(i in 2:nrow(PAA.PROFILE.DATA)){
if(i == 2) {
last.row <- 1
sampling.campaign <- 1
}
# if(difftime(index(PAA.PROFILE.DATA)[i],index(PAA.PROFILE.DATA)[i-1], units = "mins") > 60) {
if(difftime(dates[i],dates[i-1], units = "mins") > 60) {
PAA.PROFILE.DATA[last.row:(i-1),ncol(PAA.PROFILE.DATA)] <- sampling.campaign
last.row <- i
sampling.campaign <- sampling.campaign + 1
}
}
